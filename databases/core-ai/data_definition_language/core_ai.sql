-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


DROP TABLE IF EXISTS public.assistant CASCADE;

CREATE TABLE IF NOT EXISTS public.assistant
(
    id serial,
    name text NOT NULL,
    age integer DEFAULT 18,
    description text NOT NULL,
    language text DEFAULT 'english',
    audio_output_path text NOT NULL,
    conversation_log_file_path text NOT NULL,
    soul bytea NOT NULL,
    id_voice_microsoft_tts integer NOT NULL,
    id_voice_elevenlabs integer NOT NULL,
    PRIMARY KEY (id)
);

COMMENT ON TABLE public.assistant
    IS 'Stores the assistants initial data.
This is used to create new assistats and define their initial configuration.
It may be changed later to change how an assistant behaves or identifies itself.';

COMMENT ON COLUMN public.assistant.name
    IS 'This is the name used for the ai assistant, it''ll identified itself as this in the conversation.';

COMMENT ON COLUMN public.assistant.age
    IS 'Age that the ai assistant will identify having.';

COMMENT ON COLUMN public.assistant.description
    IS 'The description of the ia assistant, is recommended to describe it like this:
"You are a useful assistant that helps the user..."
Don''t include things like name, age, selected_voice, target_language, conversation_file_path, audio_output_path, etc. Since these will be added later by the app.
You may define character, mood, or other personality traits.';

COMMENT ON COLUMN public.assistant.language
    IS 'This is the spoken language of the ai assistant. Generated responses will be done in this language.';

COMMENT ON COLUMN public.assistant.audio_output_path
    IS 'This is the directory where all audio files are stored.';

COMMENT ON COLUMN public.assistant.conversation_log_file_path
    IS 'This is the file path to the log file where the conversation is stored in markdown format.';

COMMENT ON COLUMN public.assistant.id_voice_microsoft_tts
    IS 'This is the voice assigned to the asistant for use with Microsoft''s text to speech service.';

COMMENT ON COLUMN public.assistant.id_voice_elevenlabs
    IS 'This is the voice assigned to the asistant for use with ElevenLabs text to speech service.';

DROP TABLE IF EXISTS public.role CASCADE;

CREATE TABLE IF NOT EXISTS public.role
(
    id serial,
    name text,
    PRIMARY KEY (id)
);

COMMENT ON TABLE public.role
    IS 'These are the roles used in the chat messages to identify who or what is generating the content of the chat message.';

COMMENT ON COLUMN public.role.name
    IS 'The role of the messages author. One of system, user, assistant, or function.';

DROP TABLE IF EXISTS public.message CASCADE;

CREATE TABLE IF NOT EXISTS public.message
(
    id serial,
    content text,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    role_id integer NOT NULL,
    assistant_id integer NOT NULL,
    user_id integer NOT NULL,
    PRIMARY KEY (id)
);

COMMENT ON TABLE public.message
    IS 'This table contains the chat log of the conversations between the different roles.';

COMMENT ON COLUMN public.message.content
    IS 'The contents of the message. content is required for all messages, and may be null for assistant messages with function calls.';

COMMENT ON COLUMN public.message.role_id
    IS 'The id of the role that generates the content of the message.';

COMMENT ON COLUMN public.message.assistant_id
    IS 'Foreing key for the assistant table to link the ai assistant that is participating on this conversation''s message.';

COMMENT ON COLUMN public.message.user_id
    IS 'Foreing key for the user table to link the human user that is participating on this conversation''s message.';

DROP TABLE IF EXISTS public.voice_microsoft_tts CASCADE;

CREATE TABLE IF NOT EXISTS public.voice_microsoft_tts
(
    id serial,
    name text NOT NULL,
    full_name text NOT NULL,
    PRIMARY KEY (id)
);

COMMENT ON TABLE public.voice_microsoft_tts
    IS 'This table contains the voices avaiable to use in Microsoft text to speech service.';

COMMENT ON COLUMN public.voice_microsoft_tts.name
    IS 'Short name of the voice.';

COMMENT ON COLUMN public.voice_microsoft_tts.full_name
    IS 'Actual full name used for a voice.';

DROP TABLE IF EXISTS public.voice_elevenlabs CASCADE;

CREATE TABLE IF NOT EXISTS public.voice_elevenlabs
(
    id serial,
    name text NOT NULL,
    short_name text NOT NULL,
    voice_id text NOT NULL,
    voice_object bytea NOT NULL,
    pickle_protocol integer NOT NULL,
    PRIMARY KEY (id)
);

COMMENT ON TABLE public.voice_elevenlabs
    IS 'This table contains the natural voices avaiable to be used by ai assistants.';

COMMENT ON COLUMN public.voice_elevenlabs.name
    IS 'The actual name used by elevenlabs to identify the voice.';

COMMENT ON COLUMN public.voice_elevenlabs.short_name
    IS 'Short name used to identify the natural voice, this value is not unique in the column.
And is not used on Python side at this time.
Is used to assign a nickname to the voice.';

COMMENT ON COLUMN public.voice_elevenlabs.voice_id
    IS 'This is not a foraign key on this dfatabase.
This is the ide that elevenlabs gave to this particular voice.';

COMMENT ON COLUMN public.voice_elevenlabs.voice_object
    IS 'The python code to instantiate the Voice object.';

COMMENT ON COLUMN public.voice_elevenlabs.pickle_protocol
    IS 'This is the highest protocol number we know how to read.
In pickle module the HIGHEST_PROTOCOL = 5';

DROP TABLE IF EXISTS public."user" CASCADE;

CREATE TABLE IF NOT EXISTS public."user"
(
    id serial,
    name text NOT NULL,
    full_name text,
    PRIMARY KEY (id)
);

COMMENT ON TABLE public."user"
    IS 'This table contains the human users that are speaking to the ai assistant.';

COMMENT ON COLUMN public."user".name
    IS 'User name. This is not unique. And is the name used by the ai assistant to refer to the human user in spoken word.';

COMMENT ON COLUMN public."user".full_name
    IS 'This is the actual name as it appears in an app like VRChat, Steam or Discord.';

ALTER TABLE IF EXISTS public.assistant
    ADD FOREIGN KEY (id_voice_microsoft_tts)
    REFERENCES public.voice_microsoft_tts (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.assistant
    ADD FOREIGN KEY (id_voice_elevenlabs)
    REFERENCES public.voice_elevenlabs (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.message
    ADD FOREIGN KEY (role_id)
    REFERENCES public.role (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.message
    ADD FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.message
    ADD FOREIGN KEY (assistant_id)
    REFERENCES public.assistant (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;